snippet testclass "Create a test class"
<?php

namespace GoDaddy\WordPress\\${1}\Tests\Unit\\${2};

use GoDaddy\WordPress\MWC\Common\Tests\WPTestCase;

/**
 * @covers \GoDaddy\WordPress\\$1\\$2\\${3}
 */
class $3Test extends WPTestCase
{
}
endsnippet

snippet test "Create a test method"
/**
 * Tests that ${2}.
 *
 * @covers \GoDaddy\WordPress\...::...()
 *
 * @throws ExpectationFailedException
 */
public function test${1}()
{
	${0}
}
endsnippet

snippet mock "Create a Mockery mock"
/** @var ${1}&MockInterface */
$${0:instance} = Mockery::mock($1::class);
endsnippet

snippet partialmock "Create a partial Mockery mock"
/** @var ${1}&MockInterface */
$${2:instance} = Mockery::mock($1::class);
$$2->makePartial()->shouldAllowMockingProtectedMethods();
endsnippet

snippet rd "If statement used for remote debugging."
if ( in_array( '${1:`curl https://httpbin.org/ip 2>/dev/null | grep origin | sed 's/[^0-9]*\([0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\).*/\1/'`}', array_intersect_key( $_SERVER, array_fill_keys( [ 'REMOTE_ADDR', 'HTTP_CF_CONNECTING_IP', 'HTTP_X_FORWARDED_FOR' ], true ) ) ) ) {
	${2:echo '<pre><code>' . print_r( [ ${0:''} ], true ) . '</code></pre>';}
}
endsnippet

snippet edm "Enable WordPress DEBUG mode"
if ( in_array( '${1:`curl https://httpbin.org/ip 2>/dev/null | grep origin | sed 's/[^0-9]*\([0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\).*/\1/'`}', array_intersect_key( $_SERVER, array_fill_keys( [ 'REMOTE_ADDR', 'HTTP_CF_CONNECTING_IP', 'HTTP_X_FORWARDED_FOR' ], true ) ) ) ) {
	define( 'WP_DEBUG', true );
	define( 'WP_DEBUG_LOG', true );
	define( 'WP_DEBUG_DISPLAY', true );
} else {
	define( 'WP_DEBUG', false );
}
endsnippet

snippet rpr "print_r() output wrapped in <pre> and <code>."
echo '<pre><code>' . print_r( [ ${0:''} ], true ) . '</code></pre>';
endsnippet
